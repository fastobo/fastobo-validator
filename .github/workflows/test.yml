name: Test

on:
  - push
  - pull_request

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Setup Rust stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt
    - name: Check code format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - name: Check code quality
      uses: actions-rs/cargo@v1
      with:
        command: clippy

  check:
    name: Build (${{ matrix.rust-toolchain }})
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain:
          - stable
          - beta
          - nightly
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Setup Rust ${{ matrix.rust-toolchain }}
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust-toolchain }}
        override: true
    - name: Setup cache for cargo
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-${{ matrix.rust-toolchain }}-${{ matrix.feature }}
    - name: Check code
      uses: actions-rs/cargo@v1
      with:
        command: check

  publish:
    needs: check
    runs-on: ubuntu-latest
    environment: Crates.io
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Publish Rust crate
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Setup Rust stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Package and publish crate
      uses: actions-rs/cargo@v1
      with:
        command: publish
        args: '--token ${{ secrets.CRATES_IO_TOKEN }}'

  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Release
    needs: publish
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Release a Changelog
      uses: rasmus-saks/release-a-changelog-action@v1.0.1
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'

  artifact:
    needs: release
    runs-on: ubuntu-latest
    container:
      image: messense/rust-musl-cross:x86_64-musl
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Update static binaries
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Build static binary
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: '--release --target=x86_64-unknown-linux-musl'
    # - name: Compress binary
    #   uses: svenstaro/upx-action@v2
    #   with:
    #     file: target/x86_64-unknown-linux-musl/release/fastobo-validator
    - name: Create distribution archive
      run: tar czf fastobo_validator-x86_64-linux-musl.tar.gz README.md CHANGELOG.md COPYING -C target/x86_64-unknown-linux-musl/release/ fastobo-validator
    - name: Release files
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: fastobo_validator-x86_64-linux-musl.tar.gz
